import requests
import json
import uuid
import datetime

# Query Prometheus for all metric names
response = requests.get('http://127.0.0.1:9090/api/v1/label/__name__/values')
metrics = response.json()['data']

# Create a Grafana panel for each metric
panels = []
for i, metric in enumerate(metrics):
    panel = {
        "datasource": {
            "type": "prometheus",
            "uid": "prometheus",
        },
        "type": "graph",
        "title": metric,
        "gridPos": {"x": 0, "y": i * 9, "w": 12, "h": 9},
        "targets": [
            {
                "expr": metric,
                "refId": "A",
                "datasource": "Prometheus"
            }
        ]
    }
    panels.append(panel)

# Create a Grafana dashboard with the panels
dashboard = {
    "__inputs": [
        {
            "name": "DS_PROMETHEUS",
            "label": "prometheus",
            "description": "",
            "type": "datasource",
            "pluginId": "prometheus",
            "pluginName": "Prometheus"
        }
    ],
    "__elements": [],
    "__requires": [],
    "annotations": {
        "list": [
            {
                "builtIn": 1,
                "datasource": "-- Grafana --",
                "enable": True,
                "hide": True,
                "iconColor": "rgba(0, 211, 255, 1)",
                "name": "Annotations & Alerts",
                "target": {
                    "limit": 100,
                    "matchAny": False,
                    "tags": [],
                    "type": "dashboard"
                },
                "type": "dashboard"
            }
        ]
    },
    "refresh": "15s",
    "schemaVersion": 34,
    "style": "dark",
    "tags": [
        "prometheus-generated",
    ],
    "description": "Prometheus Overview Dashboard autogenerated by Python script",
    "editable": True,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 1,
    "id": None,
    "iteration": 0,
    "links": [],
    "liveNow": False,
    "panels": panels,
    "timezone": "",
    "title": "Prometheus-Overview-Generated",
    "version": datetime.datetime.now().isoformat(),
    "weekStart": "",
}

# Write the dashboard to a JSON file with indentation
with open('generated-dashboard.json', 'w') as f:
    json.dump(dashboard, f, indent=4)