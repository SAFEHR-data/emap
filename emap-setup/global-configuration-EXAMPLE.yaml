# This is an example of the global-configuration.yaml file
# that needs to be created in the top level emap project directory

###############################################################################

## Please edit sections with information for your setup.

###############################################################################


git_org_url:
  https://github.com/SAFEHR-data

# note that the project name is used in naming docker containers, so this is how you will find them later!
EMAP_PROJECT_NAME:
  test

# list of required repositories and the branch you require
# the list below shows those needed for a standard installation
# hoover is commented out, as this has EPIC IP in it so cannot be publicly released

# To add a repository use the following syntax
# name_of_dir - should match name_of_repo_on_github unless we need two branches of same
#   branch:  name_of_branch_you_wish_to_use
#   repo_name: name_of_repo_on_github (only needed if we have a second branch of a repo
#               and the name_of_dir is different
repositories:
  emap:
    branch:  main
#  hoover:
#    branch:  develop

# Each section below could represent either a service defined by Emap (eg. rabbitmq),
# an external service (eg. IDS/UDS), or really anything at all. The meaning is ultimately
# defined by the setup script.
# To pull a variable into the environment for a container, create/edit a file `*-config-envs.EXAMPLE`
# containing the (empty) variables you wish to have populated. The file (minus ".EXAMPLE" suffix)
# will be copied into the config dir with real values when you run `emap setup -g`. This config file
# should be referenced from the relevant docker-compose service definition to bring the envs into the
# container.
# Note that the sections are not namespaces, and thus variable names should be unique
# even if in a different section.
# By convention, variables intended to be passed into containers directly are in
# upper case. Variables to control the setup script itself are lower case.

# Configuration data for the rabbitmq instance used by Spring in the pipeline
rabbitmq:
  SPRING_RABBITMQ_HOST: rabbitmq
  SPRING_RABBITMQ_PORT: 5672
  SPRING_RABBITMQ_USERNAME: my_name
  SPRING_RABBITMQ_PASSWORD: my_pw
  RABBITMQ_DEFAULT_USER : my_name
  RABBITMQ_DEFAULT_PASS: my_pw

# Configuration used by global configuration
global:
  RABBITMQ_PORT: 5672
  RABBITMQ_ADMIN_PORT: 5679
  # can remove clarity and caboodle configuration if hoover is not being used
  CLARITY_JDBC_URL: jdbc:postgresql://host.docker.internal:5432/clarity
  CLARITY_USERNAME: clarity_user
  CLARITY_PASSWORD: clearity_readaccess
  CABOODLE_JDBC_URL: jdbc:postgresql://host.docker.internal:5432/caboodle
  CABOODLE_USERNAME: caboodle_username
  CABOODLE_PASSWORD: caboodle_readaccess
  ACTUATOR_ALLOWED_ORIGINS: ""
  HL7_READER_PORT: 9999  # in global so that the ports are set

# Configuration for the IDS
ids:
  IDS_JDBC_URL: jdbc:postgresql://host.docker.internal:5432/ids
  IDS_SCHEMA: schemaname
  IDS_USERNAME: someuserids
  IDS_PASSWORD: redactedids

# These dates are used to set the start and end dates between which data
# should be collected. These are NOT used for validation runs
dates:
  start: 2020-06-04T00:00:00.00Z
  end:

# Configurations for the UDS.
uds:
  UDS_JDBC_URL: jdbc:postgresql://uds_db:5432/uds
  UDS_SCHEMA: schemaname
  UDS_USERNAME: schemauser
  UDS_PASSWORD: schemapw

# These are the configurations for glowroot (a Java application performance
# management system).
glowroot:
  DOMAIN: glowroot_domain
  GLOWROOT_USERNAME: glowrootuser
  GLOWROOT_PASSWORD: glowrootpw
  GLOWROOT_ADMIN_PORT: 4000

# For testing outside the GAE, you can enable a fake UDS
fake_uds:
  enable_fake_uds: false

# config related to waveform data ingress
waveform:
  enable_waveform: false
  enable_waveform_generator: false
  CORE_WAVEFORM_RETENTION_HOURS: 24
  WAVEFORM_HL7_SOURCE_ADDRESS_ALLOW_LIST: 127.0.0.1
  WAVEFORM_HL7_TEST_DUMP_FILE: ""
  WAVEFORM_SYNTHETIC_NUM_PATIENTS: 30
  WAVEFORM_SYNTHETIC_WARP_FACTOR: 6
  WAVEFORM_SYNTHETIC_START_DATETIME: "2024-01-02T12:00:00Z"
  WAVEFORM_SYNTHETIC_END_DATETIME: "2024-01-03T12:00:00Z"

# The nginx portal and other monitoring/validation/visualisation services
monitoring:
  SERVER_EXTERNAL_HOSTNAME: server.fqdn.example
  PORTAL_PORT: 7100
  PORTAL_USERNAME: emap
  PORTAL_PASSWORD: portal_password
  use_streamlit: false
